services:
    proxy:
        platform: linux/amd64
        container_name: proxy
        image: traefik:v3.3.5
        env_file:
            - .env
        ports:
            - "0.0.0.0:80:80"
            - "0.0.0.0:443:443"
            - "127.0.0.1:8080:8080"
        volumes:
            - "./proxy/acme:/proxy/acme"
            - "./proxy/traefik-dyna-conf.yaml:/proxy/traefik-dyna-conf.yaml:ro"
        healthcheck:
            test: ["CMD", "traefik", "healthcheck", "--ping"]
            interval: 5s
            retries: 15

    api:
        platform: linux/amd64
        build: .
        container_name: api
        command: ./.venv/bin/python run-server.py
        environment:
            - POSTGRES_HOST=database
        env_file:
            - .env
        ports:
            - "127.0.0.1:8000:8000"
        depends_on:
            - database
        healthcheck:
            test: ["CMD", "curl", "-A", "curl-healthcheck", "localhost:8000/ping"]
            interval: 5s
            retries: 15

    database:
        platform: linux/amd64
        container_name: database
        image: postgres:17.0-bookworm
        env_file:
            - .env
        ports:
            - "127.0.0.1:5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
            interval: 5s
            retries: 15
        volumes:
            - ./database/data:/var/lib/postgresql/data
